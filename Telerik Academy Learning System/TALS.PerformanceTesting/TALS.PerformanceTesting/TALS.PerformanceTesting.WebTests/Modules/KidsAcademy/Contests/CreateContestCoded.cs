//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TALS.PerformanceTesting.WebTests.Modules.KidsAcademy.Contests
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using TALS.PerformanceTesting.Utils.RandomDataProvider;
    using System.Globalization;

    [DeploymentItem("tals.performancetesting.webtests\\modules\\kidsacademy\\contests\\Data\\LoginData.csv" +
        "", "tals.performancetesting.webtests\\modules\\kidsacademy\\contests\\Data")]
    [DataSource("LoginData", "Microsoft.VisualStudio.TestTools.DataSource.CSV", "|DataDirectory|\\tals.performancetesting.webtests\\modules\\kidsacademy\\contests\\Da" +
        "ta\\LoginData.csv", Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Sequential, Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns, "LoginData#csv")]
    [DataBinding("LoginData", "LoginData#csv", "Username", "LoginData.LoginData#csv.Username")]
    [DataBinding("LoginData", "LoginData#csv", "Password", "LoginData.LoginData#csv.Password")]
    public class CreateContestCoded : WebTest
    {

        public CreateContestCoded()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        private void GenerateRandomContestData(out string bgCoderId, out string contestName, out string contestStartDate, out string contestEndDate, out string contestLastActiveDate)
        {
            bgCoderId = RandomStringProvider.GetRandomInt(1, 30);

            var contestLength = int.Parse(RandomStringProvider.GetRandomInt(5, 15));
            contestName = RandomStringProvider.GetRandomString(contestLength);

            var currentDate = DateTime.Now.ToString("dd/MM/yyyy",CultureInfo.InvariantCulture);

            contestStartDate = RandomStringProvider.GetRandomDateTime(currentDate);

            contestEndDate = RandomStringProvider.GetRandomDateTime(contestStartDate.Substring(0, 10));

            contestLastActiveDate = RandomStringProvider.GetRandomDateTime(contestEndDate.Substring(0, 10));
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://test.telerikacademy.com/");
            request1.ThinkTime = 1;
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://test.telerikacademy.com/Users/Auth/Login");
            request2.ThinkTime = 8;
            request2.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/"));
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("http://test.telerikacademy.com/Users/Auth/Login");
            request3.ThinkTime = 1;
            request3.Method = "POST";
            request3.ExpectedResponseUrl = "http://test.telerikacademy.com/";
            request3.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/Users/Auth/Login"));
            FormPostHttpBody request3Body = new FormPostHttpBody();
            request3Body.FormPostParameters.Add("UsernameOrEmail", this.Context["LoginData.LoginData#csv.Username"].ToString());
            request3Body.FormPostParameters.Add("Password", this.Context["LoginData.LoginData#csv.Password"].ToString());
            request3.Body = request3Body;
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("http://test.telerikacademy.com/Administration/Navigation");
            request4.ThinkTime = 3;
            request4.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/"));
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest("http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions");
            request5.ThinkTime = 1;
            request5.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/Administration/Navigation"));
            WebTestRequest request5Dependent1 = new WebTestRequest("http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions/ReadKid" +
                    "sCompetitions");
            request5Dependent1.ThinkTime = 21;
            request5Dependent1.Method = "POST";
            request5Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request5Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request5Dependent1.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions"));
            FormPostHttpBody request5Dependent1Body = new FormPostHttpBody();
            request5Dependent1Body.FormPostParameters.Add("sort", "StartTime-desc");
            request5Dependent1Body.FormPostParameters.Add("page", "1");
            request5Dependent1Body.FormPostParameters.Add("pageSize", "25");
            request5Dependent1Body.FormPostParameters.Add("group", "");
            request5Dependent1Body.FormPostParameters.Add("filter", "");
            request5Dependent1.Body = request5Dependent1Body;
            request5.DependentRequests.Add(request5Dependent1);
            yield return request5;
            request5 = null;

            string bgCoderId, contestName, contestStartDate, contestEndDate, contestLastActiveDate;
            GenerateRandomContestData(out bgCoderId, out contestName, out contestStartDate, out contestEndDate, out contestLastActiveDate);

            WebTestRequest request6 = new WebTestRequest("http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions/CreateK" +
                    "idsCompetition");
            request6.ThinkTime = 16;
            request6.Method = "POST";
            request6.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request6.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request6.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions"));
            FormPostHttpBody request6Body = new FormPostHttpBody();
            request6Body.FormPostParameters.Add("sort", "");
            request6Body.FormPostParameters.Add("group", "");
            request6Body.FormPostParameters.Add("filter", "");
            request6Body.FormPostParameters.Add("KidsCompetitionId", "0");
            request6Body.FormPostParameters.Add("BGCoderContestId", bgCoderId);
            request6Body.FormPostParameters.Add("Name", contestName);
            request6Body.FormPostParameters.Add("IsOfficial", "true");
            request6Body.FormPostParameters.Add("StartTime", contestStartDate);
            request6Body.FormPostParameters.Add("EndTime", contestEndDate);
            request6Body.FormPostParameters.Add("ActiveTo", contestLastActiveDate);
            request6.Body = request6Body;
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest("http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions");
            request7.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/Administration/Navigation"));
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest("http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions/ReadKid" +
                    "sCompetitions");
            request8.ThinkTime = 3;
            request8.Method = "POST";
            request8.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request8.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request8.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions"));
            FormPostHttpBody request8Body = new FormPostHttpBody();
            request8Body.FormPostParameters.Add("sort", "StartTime-desc");
            request8Body.FormPostParameters.Add("page", "1");
            request8Body.FormPostParameters.Add("pageSize", "25");
            request8Body.FormPostParameters.Add("group", "");
            request8Body.FormPostParameters.Add("filter", "");
            request8.Body = request8Body;
            yield return request8;
            request8 = null;

            WebTestRequest request9 = new WebTestRequest("http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions/Destroy" +
                    "KidsCompetition");
            request9.ThinkTime = 3;
            request9.Method = "POST";
            request9.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request9.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request9.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions"));
            FormPostHttpBody request9Body = new FormPostHttpBody();
            request9Body.FormPostParameters.Add("BGCoderContestId", bgCoderId);
            request9Body.FormPostParameters.Add("Name", contestName);
            request9Body.FormPostParameters.Add("IsOfficial", "true");
            request9Body.FormPostParameters.Add("StartTime", contestStartDate);
            request9Body.FormPostParameters.Add("EndTime", contestEndDate);
            request9Body.FormPostParameters.Add("ActiveTo", contestLastActiveDate);
            request9.Body = request9Body;
            yield return request9;
            request9 = null;

            WebTestRequest request10 = new WebTestRequest("http://test.telerikacademy.com/Users/Auth/LogOut");
            request10.ThinkTime = 1;
            request10.ExpectedResponseUrl = "http://test.telerikacademy.com/";
            request10.Headers.Add(new WebTestRequestHeader("Referer", "http://test.telerikacademy.com/KidsAcademy/AdministrationKidsCompetitions"));
            yield return request10;
            request10 = null;
        }
    }
}
